security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    
    role_hierarchy:
        ROLE_COMPANY_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_COMPANY_ADMIN, ROLE_USER ]
    
    providers:
        users:
            entity:
                class: App\Entity\User
                property: email
                
    firewalls:
        login:
            pattern: ^/api/login_check
            stateless: true    
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/api, roles: ROLE_USER } 
        - { path: ^/$, roles: PUBLIC_ACCESS } 
        - { path: ^/docs, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            App\Entity\User: 'auto'
